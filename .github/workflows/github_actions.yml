env:
    ORG: "devonfw"
    REPO_SOURCE: "getting-started"
    REPO_DEST: "getting-started.wiki"
    REPO_CONSOLIDATE: "devonfw-guide"
    GH_REPO_SOURCE: "github.com/${ORG}/${REPO_SOURCE}.git"
    GH_REPO_DEST: "github.com/${ORG}/${REPO_DEST}.git"
    GH_REPO_CONSOLIDATE: "github.com/${ORG}/${REPO_CONSOLIDATE}.git"
    BUILD_USER: ${{ secrets.BUILD_USER }}
    BUILD_USER_PASSWD: ${{ secrets.BUILD_USER_PASSWD }}
    BUILD_USER_EMAIL:  ${{ secrets.BUILD_USER_EMAIL }}
on:
    push:
        branches:
            - develop
name: Documentation
jobs:
    update-wiki:
        if:  ${{github.repository == 'devonfw/getting-started'}}
        runs-on: ubuntu-latest
        steps:
          - name: setup variables
            run: |
             echo "ORG=$(echo '${{ github.repository }}' | awk -F '/' '{print $1}')" >> $GITHUB_ENV
             echo "REPO_SOURCE=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
             echo "REPO_DEST=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}').wiki" >> $GITHUB_ENV
            shell: bash
          - name: Clone necessary repositories
            run: |
                git clone https://github.com/${ORG}/${REPO_SOURCE}.git ${GH_REPO_DEST}
                git clone https://github.com/${ORG}/${REPO_CONSOLIDATE}.git ${GH_REPO_CONSOLIDATE}
            shell: bash
          - name: Clean up wiki repository, copy documentation there
            run: |
                cd ${REPO_DEST} && rm -rf * && cd ..
                yes | cp -rf ${REPO_SOURCE}/documentation/* ${REPO_DEST}/
                cd ${REPO_DEST}
          - name: Remove .asciidoc file extension from relative links
            run: grep -lr "link:[a-zA-Z0-9_.-]*\.asciidoc\[" . | xargs -r sed -i "s/\(link:[a-zA-Z0-9_.-]*\)\.asciidoc\(\[\)/\1\2/g"
          - name: Terminate Travis CI build when no changes detected
            run: |
              if git diff-index --quiet HEAD && [ ! -n "$(git status -s)" ]; then 
              set +e 
              pkill -9 -P $$ &> /dev/null || true 
              exit 0
              else 
              git config user.email ${BUILD_USER_EMAIL}
              git config user.name ${BUILD_USER}
              git status
              git add .
              git commit -m "${REPO_SOURCE} documentation | GitHub Actions $GITHUB_WORKFLOW $GITHUB_RUN_NUMBER"
              git remote add origin-wiki "https://${BUILD_USER}:${GITHUB_TOKEN}@${GH_REPO_DEST}"
              git push origin-wiki master
          - name: Update snapshot in consolidated repository
            run: |
               cd ../${REPO_CONSOLIDATE}
               if [ ! -d ${REPO_DEST} ]; then git submodule add https://github.com/${ORG}/${REPO_DEST}.git; fi;
               git submodule init
               git submodule update --recursive --remote
               cd ${REPO_DEST}
               git checkout master
               git pull
               cd ..
               git add .
               git commit -m "${REPO_SOURCE} documentation | GitHub Actions $GITHUB_WORKFLOW $GITHUB_RUN_NUMBER"
               git remote add origin-wiki "https://${BUILD_USER}:${BUILD_USER_PASSWD}@github.com/${ORG}/${REPO_CONSOLIDATE}.git"
               git push origin-wiki master
               fi
          - name: Generate PDF
            if : ${{ env.TO_BE_CANCELLED == 'false' }}
            run: |
              git config --global user.email ${BUILD_USER_EMAIL}
              git config --global user.name ${BUILD_USER}
          - name : Fix PNG images (getting-started already cloned)
            run : |
              cd ${REPO_SOURCE}
              git checkout develop
              find . -name '*.png' -exec mogrify -interlace none -format png {} +
              find . -name '*.PNG' -exec mogrify -interlace none -format PNG {} +
          - name : Generate PDF
            run : |
             mvn clean package -Ddocgen.images.dir=images,documentation -Doutput.format=pdf
             mv ./target/generated-docs/master.pdf ./devonfw_getting_started.pdf
          - name : Commit and push new getting started
            run : |
             git add ./devonfw_getting_started.pdf
             git commit -m "PDF getting started | GitHub Actions $GITHUB_WORKFLOW $GITHUB_RUN_NUMBER"
             git remote add origin-pdf "https://${BUILD_USER}:${BUILD_USER_PASSWD}@github.com/${ORG}/${REPO_CONSOLIDATE}.git"
             git push origin-pdf develop
